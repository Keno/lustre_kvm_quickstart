#version=RHEL6
# System authorization information
auth --enableshadow --passalgo=sha512

# Firewall configuration
firewall --disabled

# Use text mode install
text

# Install from web server
url --url=http://10.22.160.112:8082/repo/os6_base/C-OSAINT

# repo --name=addons	--baseurl=http://50.16.193.167:8082/repo/os6_addons/C-OSAINT
# repo --name=base	--baseurl=http://50.16.193.167:8082/repo/os6_base/C-OSAINT
# repo --name=client	--baseurl=http://50.16.193.167:8082/repo/os6_client/C-OSAINT
# repo --name=epel	--baseurl=http://50.16.193.167:8082/repo/os6_epel/C-OSAINT
# repo --name=extra	--baseurl=http://50.16.193.167:8082/repo/os6_extra/C-OSAINT
# repo --name=lustre	--baseurl=http://50.16.193.167:8082/repo/os6_lustre/C-OSAINT
# repo --name=update	--baseurl=http://50.16.193.167:8082/repo/os6_update/C-OSAINT

# Disable Setup Agent on first boot
firstboot --disable
ignoredisk --only-use=vda
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

# SELinux configuration
selinux --disabled

# Network information
network  --bootproto=dhcp --device=link --ipv6=auto --activate --hostname=test2

# Root password
rootpw femur
#rootpw --iscrypted $6$3eZfHsDX5bymyRNZ$ypdN0oRnpXYwnpXJYb60vFTNZhmSsYuTinZthopCXS6PQW0KdpZFe0zeG.OvkJhIPWh2z.7qkLvgQU3BrNVZ.1
# Do not configure the X Window System
skipx
# System timezone
timezone America/Denver --isUtc
#user --groups=wheel --name=dev --uid=1000  --gecos="dev"
user --groups=wheel --name=dev --uid=1000 --password=femur --gecos="dev"
#user --groups=wheel --name=dev --uid=1000 --password=$6$3eZfHsDX5bymyRNZ$ypdN0oRnpXYwnpXJYb60vFTNZhmSsYuTinZthopCXS6PQW0KdpZFe0zeG.OvkJhIPWh2z.7qkLvgQU3BrNVZ.1 --iscrypted --gecos="dev"



# Clear any existing partitioning
zerombr
# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=vda
autopart --type=lvm
# Partition clearing information
clearpart --all --initlabel --drives=vda
#reboot at the end
reboot

%packages
@base
@console-internet
@debugging
@development
@ftp-server
@core
@fonts
@x11
ElectricFence
asciidoc
audit-libs-devel
binutils-devel
bison
cmake
coreutils
elfutils-devel
elfutils-libelf-devel
ftp
gdb-gdbserver
gdisk
git-all
glibc-utils
hmaccalc
kernel-firmware
kexec-tools
libss
libss-devel
lftp
mc
mercurial
mgetty
mtools
nasm
newt-devel
nfs-utils
nmap
openssh-clients
openssh-server
perl-ExtUtils-Embed
python-devel
python-docutils
rpmdevtools
rpmlint
ruby-irb
screen
stunnel
syslinux
tree
tuned
tuned-utils
xmlto
yum-plugin-priorities
zlib-devel
zsh
-atmel-firmware
-b43-openfwwf
-gcc-gfortran
-iwl1000-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6050-firmware
-libertas-usb8388-firmware
-mysql-libs
-rt61pci-firmware
-rt73usb-firmware
vim-enhanced
-zd1211-firmware

%end

%post --log /root/post_install.log

#mkdir /data
#chown dev:dev /data
# add our nfs mount
# echo "syke-01A:/data /data nfs defaults 0 0" >>/etc/fstab
# enable passwordless sudo
sed -i 's/# %wheel.*ALL=(ALL).*NOPASSWD:.*ALL/%wheel\tALL=(ALL)\tNOPASSWD: ALL/' /etc/sudoers
# start sshd at boot
chkconfig sshd on


_REPO_BASE_URL=http://popeye.xyus.xyratex.com:8082/repo
_BRANCH=OSAINT
# Enable seagate repos
yum install --assumeyes \
    $_REPO_BASE_URL/os6_addons/C-$_BRANCH/noarch/os6-release-7.0-1.0.noarch.rpm \
    $_REPO_BASE_URL/devvm/C-$_BRANCH/noarch/devvm-release-6.0-4.noarch.rpm \
    $_REPO_BASE_URL/hpctools/C-$_BRANCH/noarch/hpctools-release-6.0-2.noarch.rpm \
    $_REPO_BASE_URL/trinity/C-$_BRANCH/noarch/trinity-release-6.0-3.noarch.rpm \
    $_REPO_BASE_URL/lustre/C-$_BRANCH/noarch/lustre-release-6.0-2.noarch.rpm \
    $_REPO_BASE_URL/epel/C-$_BRANCH/noarch/epel-release-7.0-3.noarch.rpm \
    $_REPO_BASE_URL/firmware/C-$_BRANCH/noarch/firmware-release-6.0-2.noarch.rpm \
    $_REPO_BASE_URL/external_firmware/C-$_BRANCH/noarch/external_firmware-release-1.5-0.noarch.rpm \
    $_REPO_BASE_URL/firmware/C-$_BRANCH/noarch/firmware-release-6.0-2.noarch.rpm \
    $_REPO_BASE_URL/test_tools/C-$_BRANCH/noarch/test_tools-release-6.0-2.noarch.rpm \
    && yum clean all

# Create a utility script to fix terminal dimensions
cat >/usr/bin/termsize<<TERM_SIZE
#!/usr/bin/env python

# Get the current size of the terminal window, and set stty size accordingly.
# A replacement for xterm's resize program, with no X dependency.
# Useful when logged in over a serial line.
# Copyright 2013 by Akkana Peck -- share and enjoy under the GPL v2 or later.

import os, sys
import fcntl
import posix
import struct
import time
import re
import termios
import select

tty = open('/dev/tty', 'r+')
tty.write('\033[7\033[r\033[999;999H\033[6n')
tty.flush()

fd = sys.stdin.fileno()
oldterm = termios.tcgetattr(fd)
newattr = oldterm[:]
newattr[3] = newattr[3] & ~termios.ICANON & ~termios.ECHO
termios.tcsetattr(fd, termios.TCSANOW, newattr)
oldflags = fcntl.fcntl(fd, fcntl.F_GETFL)
fcntl.fcntl(fd, fcntl.F_SETFL, oldflags | os.O_NONBLOCK)

try:
    while True:
        r, w, e = select.select([fd], [], [])
        if r:
            output = sys.stdin.read()
            break
finally:
    termios.tcsetattr(fd, termios.TCSAFLUSH, oldterm)
    fcntl.fcntl(fd, fcntl.F_SETFL, oldflags)

rows, cols = map(int, re.findall(r'\d+', output))

fcntl.ioctl(fd, termios.TIOCSWINSZ, struct.pack("HHHH", rows, cols, 0, 0))

print ("\nReset the terminal to %d rows %d cols" % (rows, cols))
TERM_SIZE
chmod a+x /usr/bin/termsize

#Copy SSH keys for easy access.
mkdir -p /root/.ssh
cat >/root/.ssh/authorized_keys<<SSH_AUTHORIZATION
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC9JUPjH/NuGDOwTn3c2NGHmnmHsUdZha/xYxPFuLzN9csYaywfhPa9vg6HhuJiNp7t9DYzTZc2+B3KL02JIPIqhkvdXCPy9wxzHb5u/yXPS5/USxdCYML+xsR5EcEPa/tl05R4kaK5ErivGxZWpsTnW2WsxVys/NekSJOVtj5rpbhkNE5qM+McTK30rEwUgU3JZ+4EI+FVk5pBlT+A2kuqpGTqvj33S3Z8VrPueOy8fWXpn2jhYb7qZFFBI84apM5BtjSCjGdSYKB2uI6WAUlL5shCpKKr76bwumMag4rPGa46u4CiWO7ov3c1nl5g2WPLx7QWf9xly/rFcoEup9Th 
SSH_AUTHORIZATION

chmod 700 /root/.ssh
chmod 600 /root/.ssh/*
REPO_BASE=http://10.22.160.112:8082/repo
rm -rf /etc/yum.repos.d/*
yum-config-manager --add-repo http://appdev-vm.xyus.xyratex.com/yum/devvm/OSAINT/latest/
yum-config-manager --add-repo $REPO_BASE/devvm/C-OSAINT/
yum-config-manager --add-repo $REPO_BASE/epel/C-OSAINT/
yum-config-manager --add-repo $REPO_BASE/external_firmware/C-OSAINT/
yum-config-manager --add-repo $REPO_BASE/hpctools/C-OSAINT/
yum-config-manager --add-repo $REPO_BASE/lustre/C-OSAINT/
yum-config-manager --add-repo $REPO_BASE/os6_addons/C-OSAINT/
yum-config-manager --add-repo $REPO_BASE/os6_base/C-OSAINT/
yum-config-manager --add-repo $REPO_BASE/os6_extra/C-OSAINT/
yum-config-manager --add-repo $REPO_BASE/os6_update/C-OSAINT/
yum-config-manager --add-repo $REPO_BASE/test_tools/C-OSAINT/
yum-config-manager --add-repo $REPO_BASE/trinity/C-OSAINT/
for i in /etc/yum.repos.d/* ; do echo gpgcheck=0 >>$i; done
%end
